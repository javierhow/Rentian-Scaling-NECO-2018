function network = import_ppi_network(filename, startRow, endRow)
%% Makes a network
% Each row is an edge; col1 has one node, and col2 the other node

%IMPORTFILE Import numeric data from a text file as column vectors.
%   AHR1 = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   AHR1 = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows
%   STARTROW through ENDROW of text file FILENAME.
%
% Example:
%   AHR1 = importfile('AG10803-DS12374.txt',1, 24964);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2016/06/24 23:59:50

%% Initialize variables.
% For TFs
%delimiter = '';
% For PPI
delimiter = ',';
if nargin<=2
    startRow = 1;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: text (%s)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%s%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'EmptyValue' ,NaN,'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    dataArray{1} = [dataArray{1};dataArrayBlock{1}];
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
list_protein1 = dataArray{:,1};
list_protein2 = dataArray{:,2};
%% Prepare in format used by code
network = cell(length(list_protein1),2);
for t = 1:length(list_protein1)
    network(t,1) = upper(list_protein1(t));
    network(t,2) = upper(list_protein2(t));
end
end